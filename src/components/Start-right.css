.Right-Side-main {
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.right-sidecontent-main {
  height: 100%;
  flex-direction: column;
  overflow: hidden;
  display: grid;
  grid-template-rows: 3vw 1fr;
  grid-template-areas: "top" "bottom";
}

.right-main-main {
  grid-area: bottom;
  height: 100%;
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
}

.container-step-tree {
  padding: 2vw;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.container-step-tree.height100 {
  padding: 2vw;
  display: flex;
  flex-direction: column;
  height: 100%;
  box-sizing: border-box;
}

.container-step-tree > .step-box.has-hint {
  margin-bottom: 0;
}

.container-step-tree .step-box {
  width: 100%;
  padding: var(--step-font-size, 1vw);
  font-size: var(--step-font-size, 1vw);
  border-radius: 4px;
  box-sizing: border-box;
  overflow-y: auto;
  overflow-x: hidden;
  word-break: break-all;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 1vw;
  transition: max-height 0.4s ease;
  height: calc(var(--step-font-size, 1vw) * 20);
  max-height: calc(var(--step-font-size, 1vw) * 20);
}

.container-step-tree .step-box.promoted {
  width: 80%;
  padding: var(--step-font-size, 1vw);
  font-size: var(--step-font-size, 1vw);
  border-radius: 4px;
  box-sizing: border-box;
  overflow-y: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 1vw;
  transition: max-height 0.4s ease;
  height: calc(var(--step-font-size, 1vw) * 20);
  max-height: calc(var(--step-font-size, 1vw) * 20);
}

.promotedPlus {
  width: 80%;
}

.container-step-tree .substeps .step-box {
  height: auto;
  padding: 0 0.5vw;
  border: 1px solid black;
  overflow: hidden;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.container-step-tree .step-box.hyperExpanded {
  transition: max-height 2s ease;
}

.step-title {
  font-weight: bold;
  font-size: calc(var(--step-font-size, 1vw) * 1.2);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  gap: 1vw;
}

.step-title-inner {
  display: inline-block;
  white-space: nowrap;
  align-items: start;
}

.button-container {
  width: 100%;
  display: flex;
  justify-content: center;
}

.step-box.hidden-before-fade {
  opacity: 0;
  transform: scale(0.8);
}

.Check-button {
  cursor: pointer;
  background: rgb(43, 170, 43);
  border: 1px solid rgb(3, 88, 10);
  border-radius: 4px;
  color: #fff;
  width: calc(var(--step-font-size, 1vw) * 5);
  height: calc(var(--step-font-size, 1vw) * 2);
  font-size: calc(var(--step-font-size, 1vw) * 1);
}

.Check-button:hover {
  background: rgb(49, 124, 49);
  border: 1px solid rgb(3, 88, 10);
  scale: 1.1;
  transition: scale 0.2s;
}

/* -----------------------------------
Textarea for starting prompt START
----------------------------------- */

.input-container {
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.textarea-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Start with full opacity and transition to fade out */
.text-input {
  width: 100%;
  min-height: 100%;
  max-height: 100%;
  border: 1px solid lightgrey;
  background-color: transparent;
  border-radius: 6px;
  resize: none;
  padding: 2vw;
  color: black;
  box-sizing: border-box;
  font-size: 1vw;
  line-height: 1.4;
  overflow-y: auto;
  overflow-x: hidden;
  opacity: 1;
  transition: opacity 2s ease;
}

/* When loading is true, fade out the textarea */
.input-container.loading .textarea-wrapper .text-input {
  opacity: 0;
}

/* Button styling with transition */
.button-inside {
  position: absolute;
  right: 0.8vw;
  bottom: 1vw;
  width: 2vw;
  height: 2vw;
  padding: 0;
  font-size: 1vw;
  border: none;
  border-radius: 50%;
  background-color: rgb(1, 156, 1);
  border: solid 1px black;
  color: white;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.4s ease;
  transform: scale(1);
}

/* New button style when loading is true */
.button-inside.loadingB {
  position: static;
  width: 4vw;
  height: 4vw;
  font-size: 2vw;
  transform: scale(1.2);
}

.button-inside:hover {
  background-color: rgb(0, 82, 0);
}

/* Spinner that starts rotating with a delay */
.spinner {
  display: inline-block;
  animation: spin 5s linear infinite;
  animation-delay: 0.4s;
  transform-origin: center;
}

/* Keyframes for rotation */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* -----------------------------------
Textarea for starting prompt END
----------------------------------- */

.right-header-main {
  grid-area: top;
  height: 100%;
  font-size: 0.8vw;
  display: flex;
  align-items: center;
  padding-left: 1vw;
  padding-right: 1vw;
  justify-content: space-between;
  border-bottom: 1px solid black;
  z-index: 1000;
}

/* Default text if no steps are present */
.default-text-right-start {
  color: #666;
  margin-top: 1rem;
}

.leftSide-Icons {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}

.icon-container-start-right {
  display: flex;
  flex-direction: row;
  visibility: visible;
  width: 100%;
  justify-content: space-between;
  flex: 1;
}

.step-box:hover .icon-container-start-right {
  visibility: visible;
}

.trash {
  display: flex;
  align-items: center;
  justify-content: center;
}

.trash-icon {
  width: calc(var(--step-font-size, 1vw) * 1);
  height: calc(var(--step-font-size, 1vw) * 1);
}

.trash-icon:hover {
  fill: lightgrey;
}

/* Creating and deleting steps */
@keyframes fadeInScale {
  0% {
    opacity: 0;
    transform: scale(0.65);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.fade-in {
  animation: fadeInScale 0.3s ease forwards;
}

@keyframes fadeOutScale {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.9);
  }
}

.fade-out {
  animation: fadeOutScale 0.3s ease forwards;
}

.inline-edit-textarea-editing {
  resize: none;
  background-color: transparent;
  color: black;
  display: inline-block;
  overflow-x: hidden;

  border: none;
  flex-grow: 1;
  overflow-y: auto;
  font-size: var(--step-font-size, 1vw);
  padding: 1vw;
  margin: 0;
}

.step-content {
  display: inline-block;
  margin-bottom: calc(var(--step-font-size, 1vw) * 1);
}

.step-content-hinted {
  color: red;
  font-weight: 1000;
  animation: fadeInHintContent 0.5s ease-in forwards;
}

/* ------------------------------------------- 
HINT HANDLING
------------------------------------------- */

.hint-container {
  width: 100%;
}

.hint-container.promoted {
  width: 80%;
}

.hint-block {
  background-color: white;
  border: 1px solid black;
  border-radius: 4px;
  padding-top: calc(var(--step-font-size, 1vw) * 0.9);
  padding-right: calc(var(--step-font-size, 1vw) * 0.9);
  padding-left: calc(var(--step-font-size, 1vw) * 0.9);
  padding-bottom: calc(var(--step-font-size, 1vw) * 0.9);
  font-size: calc(var(--step-font-size, 1vw) * 0.9);
  cursor: pointer;
  overflow: hidden;
  text-overflow: ellipsis;
  position: relative;
}

.hint-block:nth-child(1) {
  z-index: 23;
}
.hint-block:nth-child(2) {
  z-index: 22;
}
.hint-block:nth-child(3) {
  z-index: 21;
}

.hint-block:hover {
  background-color: lightgrey;
  z-index: 25;
}

.hint-inner {
  white-space: normal;
  background-color: transparent;
  font-weight: bold;
}

.hint-block:has(.hint-inner.extended) {
  z-index: 35;
}

.hint-content {
  display: block;
  font-weight: normal;
  font-size: calc(var(--step-font-size, 1vw) * 0.8);
}

@keyframes fadeInHintContent {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInHint {
  from {
    opacity: 1;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in-hint {
  animation: fadeInHint 0.3s ease-in-out forwards;
}

/* For when the user Cancels the decition to get correct hint */
@keyframes fadeOutForCorrectHint {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.fade-out-correctStep {
  animation: fadeOutForCorrectHint 0.3s ease forwards;
}

@keyframes fadeInForCorrectHint {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.fade-in-correctStep {
  animation: fadeInForCorrectHint 0.3s ease-in-out forwards;
}

.not-extented-hint {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  margin-top: calc(var(--step-font-size, 1vw) * -0.5);
}

/* ------------------------------------------------------------
Overlay for when the user selects to get the Correct Step
------------------------------------------------------------ */

.fullscreen-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.6); /* dark backdrop */
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
}

.overlay-box {
  background: white;
  padding: 20px;
  border-radius: 8px;
  text-align: center;
  width: 250px;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
}

.title-overlay-hint {
  font-size: 0.9vw;
  font-weight: 1000;
}

.mini-overlay-save {
  display: flex;
  align-items: center;
  margin: 0.5rem 0;
  font-size: 0.7vw;
}

.mini-overlay-save input {
  appearance: none;
  width: 16px;
  height: 16px;
  border: 2px solid black;
  background-color: white;
  cursor: pointer;
  position: relative;
  display: inline-block;
  vertical-align: middle;
  margin-right: 5px;
}

.mini-overlay-save input:checked {
  background-color: black;
  border: 2px solid black;
}

.mini-overlay-save input:checked::after {
  content: "âœ”";
  color: white;
  font-size: 0.5vw;
  font-weight: bold;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.overlay-buttons {
  display: flex;
  justify-content: space-around;
  margin-top: 10px;
}

.overlay-button-yes {
  background: rgb(0, 175, 44);
  color: white;
  border: none;
  padding: 8px 12px;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.2s;
}

.overlay-button-no {
  background: rgb(190, 46, 27);
  color: white;
  border: none;
  padding: 8px 12px;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.2s;
}

.overlay-button-yes:hover {
  background: rgb(0, 136, 34);
}

.overlay-button-no:hover {
  background: rgb(148, 17, 0);
}

/* ---------------------------------------
  Splitting step function START
  --------------------------------------- */

/* The original step briefly contracts */
@keyframes divideOriginal {
  0% {
    transform: scaleY(1);
  }
  50% {
    transform: scaleY(0.85);
  }
  100% {
    transform: scaleY(1);
  }
}

.dividing-original {
  animation: divideOriginal 1s ease-out;
}

/* The new (cloned) step slides upward from slightly overlapped position */
@keyframes divideNew {
  0% {
    opacity: 0;
    transform: translateY(-100%) scale(0.8);
  }
  10% {
    opacity: 0;
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.dividing-new {
  animation: divideNew 1s ease-out;
  transform-origin: top center;
}

/* ---------------------------------------
  Splitting step function END
  --------------------------------------- */

.substeps {
  height: 100%;
  display: flex;
  justify-content: center;
  overscroll-behavior: contain;
  /*margin-top: calc(var(--step-font-size, 1vw) * 1);*/
}

.plus-button-top,
.plus-button-bottom {
  text-align: center;
  /* Optionally add some padding */
}

.step-box.sub-steps {
  pointer-events: auto;
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.step-box.sub-steps:hover {
  background-color: lightgray;
}

/* ----------------------------------------
Animation for adding title steps
---------------------------------------- */

@keyframes slide-in-Parent {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slide-out-Parent {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-30px);
  }
}

.slide-in-Parent {
  animation: slide-in-Parent 0.4s ease forwards;
}

.slide-out-Parent {
  animation: slide-out-Parent 0.4s ease forwards;
}

/* --------------------------------
Add a substep when no substeps are present
-------------------------------- */

.container-filling-emptyness {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
}

.filling-emptyness {
  color: #b9b9b9;
  text-shadow: 1px 1px #b8b8b8;
  opacity: 0.5;
  font-weight: bold;
  font-size: calc(var(--step-font-size, 0vw) * 1.5);
  word-break: normal;
  text-align: center;
}
.filling-emptyness:hover {
  cursor: pointer;
  color: #666;
}

/* ---------------------------------------
Orientation in substeps START
--------------------------------------- */
.orientation {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: top;
  gap: 2px;
}

.orientation-parent {
  width: 100%;
}

.orientation-siblings {
  width: 100%;
  display: flex;
  flex-direction: row;
  gap: 2px;
}

.orientation-buttons {
  height: calc(var(--step-font-size, 0vw) * 1.25);
  border: 1px solid rgb(0, 191, 255);
  color: black;
  font-size: calc(var(--step-font-size, 0vw) * 0.5);
  padding: 0;
  width: 100%;
  transition: background-color 0.3s ease, transform 0.2s ease;
  cursor: default;
}

.orientation-buttons:focus,
.orientation-buttons:active {
  outline: none;
  border: 1px solid rgb(0, 191, 255); /* Keep your desired border color */
}

.orientation-buttons.middle {
  background: radial-gradient(circle, #ffffff 0%, #f3f3f3 100%);
}

.orientation-buttons.left {
  background: linear-gradient(to left, #ffffff 0%, #f3f3f3 100%);
}

.orientation-buttons.right {
  background: linear-gradient(to right, #ffffff 0%, #f3f3f3 100%);
}

.orientation-buttons.middle:not(.isEdgeSibling):hover {
  cursor: pointer;
  background: radial-gradient(circle, #fafafa 0%, #e6e6e6 100%);
}

.orientation-buttons.left:not(.isEdgeSibling):hover {
  cursor: pointer;
  background: linear-gradient(to left, #fafafa 0%, #e6e6e6 100%);
}

.orientation-buttons.right:not(.isEdgeSibling):hover {
  cursor: pointer;
  background: linear-gradient(to right, #fafafa 0%, #e6e6e6 100%);
}

.orientation-buttons {
  position: relative;
  overflow: hidden;
  z-index: 0;
}

/* Shine Layer */
.orientation-buttons:not(.isEdgeSibling):after {
  content: "";
  position: absolute;
  top: 0;
  left: -75%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    120deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.4) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  transform: skewX(-20deg);
  transition: left 0.5s ease;
  z-index: 1;
  pointer-events: none;
  mix-blend-mode: screen;
}

/* Trigger shine on hover */
.orientation-buttons:hover::after {
  left: 125%;
}

.highlighted {
  box-shadow: 0 0 8px 3px rgba(255, 255, 0, 0.8);
}

.orientation-buttons.middle.isEdgeSibling {
  opacity: 0.5;
}

.orientation-buttons.left.isEdgeSibling {
  opacity: 0.5;
}

.orientation-buttons.right.isEdgeSibling {
  opacity: 0.5;
}

/* ---------------------------------------
Orientation in substeps END
--------------------------------------- */
