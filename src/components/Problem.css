:root {
  --checkMark-tutorial: green;
}

body.dark-mode {
  --checkMark-tutorial: lightgreen;
}

.container-problem {
  position: relative;
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: 20vw 1vw auto;
  grid-template-areas: "left-side separator right-side";
  color: var(--text-color);
  align-items: center;
  background-color: transparent;
}

.custom-line {
  grid-area: separator;
  display: flex;
  justify-content: center;
  width: 2px;
  height: 100%;
  background-color: var(--border-color);
  align-self: center;
  transition: 0.3s width ease;
}

.custom-line:hover {
  width: 4px;
  cursor: ew-resize;
}

/* Right Side */
.right-side-problem {
  grid-area: right-side;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  color: var(--text-color);
  overflow-y: auto;
}

.container-tutorial-problem {
  border: 2px solid var(--text-color);
  border-radius: 50%;
  position: absolute;
  margin: 0 0 5px 5px;
  bottom: 0;
  left: 0;
  font-size: 1.1rem;
  cursor: pointer;
  transition: font-size 0.2s ease, transform 0.2s ease;
}

.container-tutorial-problem.abstract {
  left: 5px;
}

.container-tutorial-problem:hover {
  transform: scale(1.1);
  font-weight: bold;
}

.Tutorial-Problem {
  width: 27px;
  height: 27px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* START OF TUTORIAL CSS */

/* overlay dims everything except the “hole” */
.tutorial-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  pointer-events: none;
  z-index: 10000;
}

/* dark blocks around the hole */
.overlay-block {
  position: absolute;
  background: rgba(0, 0, 0, 0.7);
  pointer-events: all;
}

/* transparent hole to catch clicks */
.overlay-hole {
  position: absolute;
  pointer-events: all;
}

.overlay-hole.hover-enabled {
  pointer-events: all;
  /* I tried enabeling hovering but it doesn't work */
}

/* animate transitions */
.tutorial-overlay.with-anim .overlay-block {
  transition: all 0.4s ease;
}
.tutorial-overlay.no-anim .overlay-block {
  transition: none;
}

/* tutorial modal */
.tutorial-step-container {
  width: 280px;
  background: var(--dropdown-bg);
  color: var(--text-color);
  border: 1px solid black;
  border-radius: 6px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  padding: 16px;
  z-index: 10000;
  display: flex;
  flex-direction: column;
  pointer-events: auto;
}

.close-button-tutorial:hover {
  color: grey;
  cursor: pointer;
}

.tutorial-header {
  font-size: 17px;
  margin-bottom: 12px;
  font-weight: bold;
}

.tutorial-content {
  flex: 1;
  margin-bottom: 16px;
  font-size: 17px;
  max-height: 400px;
  overflow-y: auto;
}

.tutorial-footer {
  display: flex;
  justify-content: space-between;
  gap: 20px;
}

.tutorial-footer button {
  background-color: #6da096;
}

.tutorial-footer button {
  width: 100px;
  padding: 4px 16px;
  font-size: 15px;
  cursor: pointer;
  outline: none;
  border: 1px solid grey;
  transition: transform 0.3s ease;
}

.skip-button-tutorial {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: row;
  gap: 2px;
  color: var(--text-color);
}

.check-icon-tutorial {
  color: var(--checkMark-tutorial);
}

.tutorial-footer button.active {
  outline: none;
}

.tutorial-footer button:not(:disabled):hover {
  transform: translateY(-1px);
}

.tutorial-footer button:disabled {
  opacity: 0.5;
  cursor: default;
}

.tutorial-overlay.with-anim .tutorial-step-container {
  transition: all 0.4s ease;
}

/* disable all container animations when .no-anim */
.tutorial-overlay.no-anim .tutorial-step-container {
  transition: none;
}

/* loading bar START */
.tutorial-progress-container {
  margin-bottom: 16px;
}

.tutorial-progress-bar {
  position: relative;
  height: 15px;
  border: 2px solid black;
  border-radius: 8px;
  overflow: hidden;
  display: flex;
  align-items: center;
  font-family: monospace;
}

.tutorial-progress-fill {
  background-color: #27ae60;
  height: 100%;
  display: flex;
  align-items: center;
  padding-left: 8px;
  transition: width 0.4s ease;
  color: black;
  font-weight: bold;
  overflow: hidden;
  position: relative;
}

/* Wave animation */
.tutorial-progress-fill::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  animation: waveFlow 4s linear infinite;
  transform: translateX(-100%);
  mask-image: url('data:image/svg+xml;utf8,<svg viewBox="0 0 100 20" xmlns="http://www.w3.org/2000/svg"><path d="M0,10 q25,-15 50,0 t50,0 q25,15 50,0" fill="none" stroke="white" stroke-width="2"/></svg>');
  mask-size: 100px 100%;
  mask-repeat: repeat-x;
}

@keyframes waveFlow {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0%);
  }
}

/* Colorful dots animation */
.impulse-dots {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.impulse-dot {
  position: absolute;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  animation: dotFlow 4s linear infinite;
  filter: brightness(1.2);
  opacity: 0.8;
}

@keyframes dotFlow {
  0% {
    transform: translateX(-20px) translateY(0) scale(0.8);
    opacity: 0;
  }
  20% {
    transform: translateX(0) translateY(-3px) scale(1);
    opacity: 0.8;
  }
  80% {
    transform: translateX(80%) translateY(2px) scale(1);
    opacity: 0.8;
  }
  100% {
    transform: translateX(100%) translateY(0) scale(0.8);
    opacity: 0;
  }
}

.tutorial-progress-number {
  z-index: 1;
  font-size: 10px;
  font-weight: normal;
  color: var(--text-color);
}

.tutorial-progress-total {
  position: absolute;
  right: 8px;
  font-size: 10px;
  color: black;
  color: var(--text-color);
}

/* loading bar END */

/* END OF TUTORIAL CSS */
